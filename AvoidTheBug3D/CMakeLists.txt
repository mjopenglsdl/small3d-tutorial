CMAKE_MINIMUM_REQUIRED(VERSION 3.0.2)
PROJECT(game)

  SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${game_BINARY_DIR}/bin")
  IF(MSVC)
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG "${game_BINARY_DIR}/bin")
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE "${game_BINARY_DIR}/bin")
  ENDIF(MSVC)

  SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${game_BINARY_DIR}/lib")
  IF(MSVC)
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG "${game_BINARY_DIR}/lib")
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE "${game_BINARY_DIR}/lib")
  ENDIF(MSVC)

  SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${game_BINARY_DIR}/lib")
  IF(MSVC)
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG "${game_BINARY_DIR}/lib")
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE "${game_BINARY_DIR}/lib")
  ENDIF(MSVC)

IF(UNIX)
   set(DEPS_PATH "${CMAKE_SOURCE_DIR}/deps")
   set(CMAKE_PREFIX_PATH ${DEPS_PATH})
ENDIF()

SET(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/deps/cmake")

FIND_PACKAGE(SMALL3D REQUIRED)
FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(GLFW REQUIRED)
FIND_PACKAGE(GLEW REQUIRED)
FIND_PACKAGE(PNG REQUIRED)
FIND_PACKAGE(GLM)
FIND_PACKAGE(OGG REQUIRED)
FIND_PACKAGE(VORBIS REQUIRED)
FIND_PACKAGE(Portaudio REQUIRED)
FIND_PACKAGE(Freetype REQUIRED)
IF(NOT WIN32)
  FIND_PACKAGE(BZip2 REQUIRED)
ENDIF()
FIND_PACKAGE(PNG REQUIRED)
FIND_PACKAGE(OGG REQUIRED)

SUBDIRS(src)

FILE(COPY "resources" DESTINATION "${PROJECT_BINARY_DIR}/bin")
